diff --git a/pyenet/enet/host.c b/pyenet/enet/host.c
index c44f2ed..f7d384f 100644
--- a/pyenet/enet/host.c
+++ b/pyenet/enet/host.c
@@ -90,6 +90,7 @@ enet_host_create (const ENetAddress * address, size_t peerCount, size_t channelL
     host -> receivedAddress.port = 0;
     host -> receivedData = NULL;
     host -> receivedDataLength = 0;
+    host -> receiveCallback = NULL;
      
     host -> totalSentData = 0;
     host -> totalSentPackets = 0;
diff --git a/pyenet/enet/include/enet/enet.h b/pyenet/enet/include/enet/enet.h
index 716635b..673d8fc 100644
--- a/pyenet/enet/include/enet/enet.h
+++ b/pyenet/enet/include/enet/enet.h
@@ -355,6 +355,7 @@ typedef struct _ENetHost
    enet_uint32          totalSentPackets;            /**< total UDP packets sent, user should reset to 0 as needed to prevent overflow */
    enet_uint32          totalReceivedData;           /**< total data received, user should reset to 0 as needed to prevent overflow */
    enet_uint32          totalReceivedPackets;        /**< total UDP packets received, user should reset to 0 as needed to prevent overflow */
+   int                  (*receiveCallback)();
 } ENetHost;
 
 /**
diff --git a/pyenet/enet/protocol.c b/pyenet/enet/protocol.c
index da64e91..9f246fe 100644
--- a/pyenet/enet/protocol.c
+++ b/pyenet/enet/protocol.c
@@ -1171,6 +1171,9 @@ enet_protocol_receive_incoming_commands (ENetHost * host, ENetEvent * event)
       
        host -> totalReceivedData += receivedLength;
        host -> totalReceivedPackets ++;
+
+       if (host -> receiveCallback != NULL && host -> receiveCallback() == 1)
+          return 1;
  
        switch (enet_protocol_handle_incoming_commands (host, event))
        {
